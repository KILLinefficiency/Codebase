#/bin/bash

n_args="${#@}"

if [ $n_args -eq 0 ]; then
cat << HELP
help here
HELP
fi

if [ -e .codebase/branch ]; then
	BRANCH=$(cat .codebase/branch)
else
	BRANCH="root"
fi

if [ "$1" == "construct" ]; then
	mkdir .codebase
	mkdir .codebase/root
	echo "1" > .codebase/root/save_count
	echo "root" > .codebase/branch
fi

if [ "$1" == "div" ]; then
	mkdir .codebase/$2
	cp .codebase/$BRANCH/* .codebase/$2
fi

if [ "$1" == "ndiv" ]; then
	for divs in $(ls -F .codebase | grep "/"); do
		if [ "$BRANCH/" == "$divs" ]; then
			echo "--> $divs"
		else
			echo "    $divs"
		fi
	done
fi

if [ "$1" == "trigger" ]; then
	if [ -d .codebase/$2 ]; then
		echo "$2" > .codebase/branch
	else
		echo "Division \"$2\" does not exist."
	fi
	echo "You are on \"$(cat .codebase/branch)\" division now."
fi

if [ "$1" == "cut" ]; then
	if [ "$2" != "root" ]; then
		read -p "Are you sure you want to cut \"$2\"? [y/N] " cut_div
		if [ -z $cut_div ]; then
			exit
		elif [ "$cut_div" == "y" ] || [ "$cut_div" == "Y" ]; then
			rm -rf .codebase/$2
			echo "root" > .codebase/branch
		else
			exit
		fi
	else
		echo "Cannot cut the \"root\" division."
	fi
fi

if [ "$1" == "destruct" ]; then
	read -p "Are you sure you want to deconstruct the codebase? [y/N] " destruct_codebase
	if [ -z $destruct_codebase ]; then
		exit
	elif [ "$destruct_codebase" == "y" ] || [ "$destruct_codebase" == "Y" ]; then
		rm -rf .codebase
	else
		exit
	fi
fi

if [ "$1" == "save" ]; then
	SAVE=$(cat .codebase/$BRANCH/save_count)
	cat $2 > .codebase/$BRANCH/$SAVE
	echo "$2 $3" > .codebase/$BRANCH/$SAVE-info.txt
	echo "$((SAVE + 1))" > .codebase/$BRANCH/save_count
fi

if [ "$1" == "goto" ]; then
	cat .codebase/$BRANCH/$2 > $(awk '{print $1}' .codebase/$BRANCH/$2-info.txt)
fi

if [ "$1" == "history" ]; then
	FILES=$(ls .codebase/$BRANCH | grep "info.txt" | wc -l)
	echo ""
	for saves in $(seq $FILES); do
		echo -n "$saves --> "
		cat .codebase/$BRANCH/$saves-info.txt
		echo ""
	done
fi
